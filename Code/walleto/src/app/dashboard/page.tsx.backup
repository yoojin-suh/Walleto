'use client';

import { useState, useEffect } from 'react';
import Image from 'next/image';
import { useAuth } from '@/contexts/AuthContext';
import { useRouter } from 'next/navigation';
import {
  FiHome,
  FiPieChart,
  FiCreditCard,
  FiTrendingUp,
  FiSettings,
  FiLogOut,
  FiMenu,
  FiX,
  FiDollarSign,
  FiArrowUp,
  FiArrowDown,
  FiShoppingCart,
  FiCoffee,
  FiFilm,
} from 'react-icons/fi';

export default function DashboardPage() {
  const { user, signOut } = useAuth();
  const router = useRouter();
  const [sidebarOpen, setSidebarOpen] = useState(false);

  useEffect(() => {
    if (!user) {
      router.push('/signin');
    } else if (!user.onboardingCompleted) {
      router.push('/onboarding');
    }
  }, [user, router]);

  const handleSignOut = () => {
    signOut();
    router.push('/signin');
  };

  if (!user || !user.onboardingCompleted) {
    return null;
  }

  const displayName = user.nickname || user.firstName || 'User';

  // Mock data for the dashboard
  const stats = [
    {
      label: 'Total Balance',
      value: '$24,550',
      change: '+12.5%',
      positive: true,
      icon: FiDollarSign,
      color: 'purple',
    },
    {
      label: 'Monthly Income',
      value: '$8,400',
      change: '+8.2%',
      positive: true,
      icon: FiArrowUp,
      color: 'green',
    },
    {
      label: 'Monthly Expenses',
      value: '$3,247',
      change: '-5.4%',
      positive: true,
      icon: FiArrowDown,
      color: 'red',
    },
    {
      label: 'Savings Goal',
      value: '68%',
      change: 'â†‘ On track',
      positive: true,
      icon: FiTrendingUp,
      color: 'blue',
    },
  ];

  const recentTransactions = [
    { id: 1, name: 'Grocery Shopping', amount: -85.32, category: 'Food', icon: FiShoppingCart, color: 'bg-green-100 text-green-600' },
    { id: 2, name: 'Coffee Shop', amount: -12.50, category: 'Food', icon: FiCoffee, color: 'bg-orange-100 text-orange-600' },
    { id: 3, name: 'Netflix Subscription', amount: -15.99, category: 'Entertainment', icon: FiFilm, color: 'bg-purple-100 text-purple-600' },
    { id: 4, name: 'Salary Deposit', amount: 4200.00, category: 'Income', icon: FiDollarSign, color: 'bg-blue-100 text-blue-600' },
  ];

  const budgetCategories = [
    { name: 'Food & Dining', spent: 450, budget: 600, color: 'bg-purple-600' },
    { name: 'Transportation', spent: 180, budget: 300, color: 'bg-blue-600' },
    { name: 'Entertainment', spent: 120, budget: 200, color: 'bg-pink-600' },
    { name: 'Shopping', spent: 320, budget: 400, color: 'bg-green-600' },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Sidebar */}
      <aside
        className={`fixed top-0 left-0 z-40 h-screen w-64 bg-white border-r border-gray-200 transition-transform ${
          sidebarOpen ? 'translate-x-0' : '-translate-x-full'
        } lg:translate-x-0`}
      >
        <div className="flex flex-col h-full">
          {/* Logo */}
          <div className="p-6 border-b border-gray-200">
            <h1 className="text-2xl font-bold bg-[linear-gradient(135deg,#667eea_0%,#764ba2_100%)] bg-clip-text text-transparent">
              Walleto
            </h1>
          </div>

          {/* Navigation */}
          <nav className="flex-1 p-4 space-y-2">
            <a
              href="#"
              className="flex items-center gap-3 px-4 py-3 text-white bg-[linear-gradient(135deg,#667eea_0%,#764ba2_100%)] rounded-lg font-medium"
            >
              <FiHome className="text-xl" />
              Dashboard
            </a>
            <a
              href="#"
              className="flex items-center gap-3 px-4 py-3 text-gray-700 hover:bg-purple-50 rounded-lg font-medium transition"
            >
              <FiPieChart className="text-xl" />
              Analytics
            </a>
            <a
              href="#"
              className="flex items-center gap-3 px-4 py-3 text-gray-700 hover:bg-purple-50 rounded-lg font-medium transition"
            >
              <FiCreditCard className="text-xl" />
              Transactions
            </a>
            <a
              href="#"
              className="flex items-center gap-3 px-4 py-3 text-gray-700 hover:bg-purple-50 rounded-lg font-medium transition"
            >
              <FiTrendingUp className="text-xl" />
              Goals
            </a>
            <a
              href="#"
              className="flex items-center gap-3 px-4 py-3 text-gray-700 hover:bg-purple-50 rounded-lg font-medium transition"
            >
              <FiSettings className="text-xl" />
              Settings
            </a>
          </nav>

          {/* User Profile & Logout */}
          <div className="p-4 border-t border-gray-200">
            <div className="flex items-center gap-3 mb-3">
              <div className="w-10 h-10 rounded-full bg-gradient-to-br from-purple-400 to-purple-600 flex items-center justify-center text-white font-semibold overflow-hidden">
                {user.profilePicture ? (
                  <Image
                    src={user.profilePicture}
                    alt="Profile"
                    width={40}
                    height={40}
                    className="w-full h-full object-cover"
                    unoptimized
                  />
                ) : (
                  displayName.charAt(0).toUpperCase()
                )}
              </div>
              <div className="flex-1 min-w-0">
                <p className="font-semibold text-gray-800 truncate">{displayName}</p>
                <p className="text-xs text-gray-500 truncate">{user.email}</p>
              </div>
            </div>
            <button
              onClick={handleSignOut}
              className="flex items-center gap-2 w-full px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg font-medium transition"
            >
              <FiLogOut />
              Sign Out
            </button>
          </div>
        </div>
      </aside>

      {/* Mobile Sidebar Overlay */}
      {sidebarOpen && (
        <div
          className="fixed inset-0 bg-black/50 z-30 lg:hidden"
          onClick={() => setSidebarOpen(false)}
        ></div>
      )}

      {/* Main Content */}
      <div className="lg:ml-64">
        {/* Top Bar */}
        <header className="bg-white border-b border-gray-200 sticky top-0 z-20">
          <div className="flex items-center justify-between px-4 py-4">
            <button
              onClick={() => setSidebarOpen(!sidebarOpen)}
              className="lg:hidden p-2 hover:bg-gray-100 rounded-lg"
            >
              {sidebarOpen ? <FiX className="text-2xl" /> : <FiMenu className="text-2xl" />}
            </button>

            <h2 className="text-xl font-bold text-gray-800">
              Welcome back, {displayName}! ðŸ‘‹
            </h2>

            <div className="flex items-center gap-3">
              <button className="px-4 py-2 bg-[linear-gradient(135deg,#667eea_0%,#764ba2_100%)] text-white rounded-lg font-medium hover:shadow-lg transition">
                + Add Transaction
              </button>
            </div>
          </div>
        </header>

        {/* Dashboard Content */}
        <main className="p-6 space-y-6">
          {/* Stats Grid */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {stats.map((stat, index) => (
              <div
                key={index}
                className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition"
              >
                <div className="flex items-start justify-between mb-3">
                  <div className={`p-3 rounded-lg bg-${stat.color}-100`}>
                    <stat.icon className={`text-2xl text-${stat.color}-600`} />
                  </div>
                  <span
                    className={`text-sm font-semibold ${
                      stat.positive ? 'text-green-600' : 'text-red-600'
                    }`}
                  >
                    {stat.change}
                  </span>
                </div>
                <p className="text-sm text-gray-600 mb-1">{stat.label}</p>
                <p className="text-3xl font-bold text-gray-900">{stat.value}</p>
              </div>
            ))}
          </div>

          {/* Charts & Recent Activity */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {/* Budget Overview */}
            <div className="lg:col-span-2 bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-bold text-gray-800 mb-4">Budget Overview</h3>
              <div className="space-y-4">
                {budgetCategories.map((category, index) => {
                  const percentage = (category.spent / category.budget) * 100;
                  return (
                    <div key={index}>
                      <div className="flex justify-between items-center mb-2">
                        <span className="text-sm font-medium text-gray-700">{category.name}</span>
                        <span className="text-sm text-gray-600">
                          ${category.spent} / ${category.budget}
                        </span>
                      </div>
                      <div className="h-3 bg-gray-200 rounded-full overflow-hidden">
                        <div
                          className={`h-full ${category.color} transition-all`}
                          style={{ width: `${percentage}%` }}
                        ></div>
                      </div>
                    </div>
                  );
                })}
              </div>

              {/* AI Insight */}
              <div className="mt-6 p-4 bg-purple-50 rounded-lg border border-purple-200">
                <p className="text-sm font-semibold text-purple-800 mb-1">ðŸ’¡ AI Insight</p>
                <p className="text-sm text-purple-700">
                  Great job! You're spending 18% less on dining this month. Keep it up to reach your
                  savings goal faster.
                </p>
              </div>
            </div>

            {/* Recent Transactions */}
            <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
              <h3 className="text-lg font-bold text-gray-800 mb-4">Recent Transactions</h3>
              <div className="space-y-3">
                {recentTransactions.map((transaction) => (
                  <div key={transaction.id} className="flex items-center gap-3">
                    <div className={`p-2 rounded-lg ${transaction.color}`}>
                      <transaction.icon className="text-lg" />
                    </div>
                    <div className="flex-1 min-w-0">
                      <p className="text-sm font-medium text-gray-800 truncate">
                        {transaction.name}
                      </p>
                      <p className="text-xs text-gray-500">{transaction.category}</p>
                    </div>
                    <p
                      className={`text-sm font-bold ${
                        transaction.amount > 0 ? 'text-green-600' : 'text-gray-900'
                      }`}
                    >
                      {transaction.amount > 0 ? '+' : ''}${Math.abs(transaction.amount).toFixed(2)}
                    </p>
                  </div>
                ))}
              </div>
              <button className="w-full mt-4 py-2 text-purple-600 font-medium hover:bg-purple-50 rounded-lg transition">
                View All Transactions
              </button>
            </div>
          </div>

          {/* Quick Actions */}
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <h3 className="text-lg font-bold text-gray-800 mb-4">Quick Actions</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <button className="p-4 border-2 border-gray-200 rounded-lg hover:border-purple-600 hover:bg-purple-50 transition text-center">
                <FiCreditCard className="text-2xl mx-auto mb-2 text-purple-600" />
                <p className="text-sm font-medium text-gray-700">Add Card</p>
              </button>
              <button className="p-4 border-2 border-gray-200 rounded-lg hover:border-purple-600 hover:bg-purple-50 transition text-center">
                <FiTrendingUp className="text-2xl mx-auto mb-2 text-purple-600" />
                <p className="text-sm font-medium text-gray-700">Set Goal</p>
              </button>
              <button className="p-4 border-2 border-gray-200 rounded-lg hover:border-purple-600 hover:bg-purple-50 transition text-center">
                <FiPieChart className="text-2xl mx-auto mb-2 text-purple-600" />
                <p className="text-sm font-medium text-gray-700">View Reports</p>
              </button>
              <button className="p-4 border-2 border-gray-200 rounded-lg hover:border-purple-600 hover:bg-purple-50 transition text-center">
                <FiSettings className="text-2xl mx-auto mb-2 text-purple-600" />
                <p className="text-sm font-medium text-gray-700">Settings</p>
              </button>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}
